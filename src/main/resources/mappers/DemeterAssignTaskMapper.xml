<?xml version="1.0" encoding="UTF-8" ?>
<!--suppress ALL -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ziroom.tech.demeterapi.dao.mapper.DemeterAssignTaskDao">
    <resultMap id="BaseResultMap" type="com.ziroom.tech.demeterapi.dao.entity.DemeterAssignTask">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="task_effective_immediate" property="taskEffectiveImmediate" jdbcType="TINYINT"/>
        <result column="task_start_time" property="taskStartTime" jdbcType="TIMESTAMP"/>
        <result column="task_end_time" property="taskEndTime" jdbcType="TIMESTAMP"/>
        <result column="task_reward" property="taskReward" jdbcType="INTEGER"/>
        <result column="attachment_url" property="attachmentUrl" jdbcType="VARCHAR"/>
        <result column="attachment_name" property="attachmentName" jdbcType="VARCHAR"/>
        <result column="task_status" property="taskStatus" jdbcType="INTEGER"/>
        <result column="task_description" property="taskDescription" jdbcType="VARCHAR"/>
        <result column="publisher" property="publisher" jdbcType="VARCHAR"/>
        <result column="need_email_remind" property="needEmailRemind" jdbcType="TINYINT"/>
        <result column="need_punishment" property="needPunishment" jdbcType="TINYINT"/>
        <result column="need_acceptance" property="needAcceptance" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_id" property="createId" jdbcType="VARCHAR"/>
        <result column="modify_id" property="modifyId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, task_name, task_effective_immediate, task_start_time, task_end_time, task_reward, attachment_url, attachment_name, task_status, task_description, publisher, need_email_remind, need_punishment, need_acceptance, 
        create_time, update_time, create_id, modify_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterAssignTaskExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        FROM demeter_assign_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM demeter_assign_task
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM demeter_assign_task
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterAssignTask">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO demeter_assign_task (task_name, task_effective_immediate, task_start_time, task_end_time, task_reward, attachment_url, 
            attachment_name, task_status, task_description, publisher, need_email_remind, need_punishment, 
            need_acceptance, create_time, update_time, create_id, modify_id)
        VALUES (#{taskName,jdbcType=VARCHAR}, #{taskEffectiveImmediate,jdbcType=TINYINT}, #{taskStartTime,jdbcType=TIMESTAMP}, #{taskEndTime,jdbcType=TIMESTAMP}, #{taskReward,jdbcType=INTEGER}, #{attachmentUrl,jdbcType=VARCHAR}, 
            #{attachmentName,jdbcType=VARCHAR}, #{taskStatus,jdbcType=INTEGER}, #{taskDescription,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{needEmailRemind,jdbcType=TINYINT}, #{needPunishment,jdbcType=TINYINT}, 
            #{needAcceptance,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR}, #{modifyId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterAssignTask">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO demeter_assign_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskName != null">
                task_name,
            </if>
            <if test="taskEffectiveImmediate != null">
                task_effective_immediate,
            </if>
            <if test="taskStartTime != null">
                task_start_time,
            </if>
            <if test="taskEndTime != null">
                task_end_time,
            </if>
            <if test="taskReward != null">
                task_reward,
            </if>
            <if test="attachmentUrl != null">
                attachment_url,
            </if>
            <if test="attachmentName != null">
                attachment_name,
            </if>
            <if test="taskStatus != null">
                task_status,
            </if>
            <if test="taskDescription != null">
                task_description,
            </if>
            <if test="publisher != null">
                publisher,
            </if>
            <if test="needEmailRemind != null">
                need_email_remind,
            </if>
            <if test="needPunishment != null">
                need_punishment,
            </if>
            <if test="needAcceptance != null">
                need_acceptance,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="modifyId != null">
                modify_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="taskEffectiveImmediate != null">
                #{taskEffectiveImmediate,jdbcType=TINYINT},
            </if>
            <if test="taskStartTime != null">
                #{taskStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskEndTime != null">
                #{taskEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskReward != null">
                #{taskReward,jdbcType=INTEGER},
            </if>
            <if test="attachmentUrl != null">
                #{attachmentUrl,jdbcType=VARCHAR},
            </if>
            <if test="attachmentName != null">
                #{attachmentName,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="taskDescription != null">
                #{taskDescription,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="needEmailRemind != null">
                #{needEmailRemind,jdbcType=TINYINT},
            </if>
            <if test="needPunishment != null">
                #{needPunishment,jdbcType=TINYINT},
            </if>
            <if test="needAcceptance != null">
                #{needAcceptance,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="modifyId != null">
                #{modifyId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterAssignTaskExample" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM demeter_assign_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        UPDATE demeter_assign_task
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.taskName != null">
                task_name = #{record.taskName,jdbcType=VARCHAR},
            </if>
            <if test="record.taskEffectiveImmediate != null">
                task_effective_immediate = #{record.taskEffectiveImmediate,jdbcType=TINYINT},
            </if>
            <if test="record.taskStartTime != null">
                task_start_time = #{record.taskStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.taskEndTime != null">
                task_end_time = #{record.taskEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.taskReward != null">
                task_reward = #{record.taskReward,jdbcType=INTEGER},
            </if>
            <if test="record.attachmentUrl != null">
                attachment_url = #{record.attachmentUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.attachmentName != null">
                attachment_name = #{record.attachmentName,jdbcType=VARCHAR},
            </if>
            <if test="record.taskStatus != null">
                task_status = #{record.taskStatus,jdbcType=INTEGER},
            </if>
            <if test="record.taskDescription != null">
                task_description = #{record.taskDescription,jdbcType=VARCHAR},
            </if>
            <if test="record.publisher != null">
                publisher = #{record.publisher,jdbcType=VARCHAR},
            </if>
            <if test="record.needEmailRemind != null">
                need_email_remind = #{record.needEmailRemind,jdbcType=TINYINT},
            </if>
            <if test="record.needPunishment != null">
                need_punishment = #{record.needPunishment,jdbcType=TINYINT},
            </if>
            <if test="record.needAcceptance != null">
                need_acceptance = #{record.needAcceptance,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createId != null">
                create_id = #{record.createId,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyId != null">
                modify_id = #{record.modifyId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        UPDATE demeter_assign_task
        SET id = #{record.id,jdbcType=BIGINT},
            task_name = #{record.taskName,jdbcType=VARCHAR},
            task_effective_immediate = #{record.taskEffectiveImmediate,jdbcType=TINYINT},
            task_start_time = #{record.taskStartTime,jdbcType=TIMESTAMP},
            task_end_time = #{record.taskEndTime,jdbcType=TIMESTAMP},
            task_reward = #{record.taskReward,jdbcType=INTEGER},
            attachment_url = #{record.attachmentUrl,jdbcType=VARCHAR},
            attachment_name = #{record.attachmentName,jdbcType=VARCHAR},
            task_status = #{record.taskStatus,jdbcType=INTEGER},
            task_description = #{record.taskDescription,jdbcType=VARCHAR},
            publisher = #{record.publisher,jdbcType=VARCHAR},
            need_email_remind = #{record.needEmailRemind,jdbcType=TINYINT},
            need_punishment = #{record.needPunishment,jdbcType=TINYINT},
            need_acceptance = #{record.needAcceptance,jdbcType=TINYINT},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            create_id = #{record.createId,jdbcType=VARCHAR},
            modify_id = #{record.modifyId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterAssignTask">
        UPDATE demeter_assign_task
        <set>
            <if test="taskName != null">
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="taskEffectiveImmediate != null">
                task_effective_immediate = #{taskEffectiveImmediate,jdbcType=TINYINT},
            </if>
            <if test="taskStartTime != null">
                task_start_time = #{taskStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskEndTime != null">
                task_end_time = #{taskEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskReward != null">
                task_reward = #{taskReward,jdbcType=INTEGER},
            </if>
            <if test="attachmentUrl != null">
                attachment_url = #{attachmentUrl,jdbcType=VARCHAR},
            </if>
            <if test="attachmentName != null">
                attachment_name = #{attachmentName,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                task_status = #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="taskDescription != null">
                task_description = #{taskDescription,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                publisher = #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="needEmailRemind != null">
                need_email_remind = #{needEmailRemind,jdbcType=TINYINT},
            </if>
            <if test="needPunishment != null">
                need_punishment = #{needPunishment,jdbcType=TINYINT},
            </if>
            <if test="needAcceptance != null">
                need_acceptance = #{needAcceptance,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="modifyId != null">
                modify_id = #{modifyId,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterAssignTask">
        UPDATE demeter_assign_task
        SET task_name = #{taskName,jdbcType=VARCHAR},
            task_effective_immediate = #{taskEffectiveImmediate,jdbcType=TINYINT},
            task_start_time = #{taskStartTime,jdbcType=TIMESTAMP},
            task_end_time = #{taskEndTime,jdbcType=TIMESTAMP},
            task_reward = #{taskReward,jdbcType=INTEGER},
            attachment_url = #{attachmentUrl,jdbcType=VARCHAR},
            attachment_name = #{attachmentName,jdbcType=VARCHAR},
            task_status = #{taskStatus,jdbcType=INTEGER},
            task_description = #{taskDescription,jdbcType=VARCHAR},
            publisher = #{publisher,jdbcType=VARCHAR},
            need_email_remind = #{needEmailRemind,jdbcType=TINYINT},
            need_punishment = #{needPunishment,jdbcType=TINYINT},
            need_acceptance = #{needAcceptance,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_id = #{createId,jdbcType=VARCHAR},
            modify_id = #{modifyId,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
</mapper>