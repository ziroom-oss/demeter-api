<?xml version="1.0" encoding="UTF-8" ?>
<!--suppress ALL -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ziroom.tech.demeterapi.dao.mapper.DemeterTaskUserDao">
    <resultMap id="BaseResultMap" type="com.ziroom.tech.demeterapi.dao.entity.DemeterTaskUser">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="task_id" property="taskId" jdbcType="BIGINT"/>
        <result column="task_type" property="taskType" jdbcType="INTEGER"/>
        <result column="receiver_uid" property="receiverUid" jdbcType="VARCHAR"/>
        <result column="task_status" property="taskStatus" jdbcType="INTEGER"/>
        <result column="reject_reason" property="rejectReason" jdbcType="VARCHAR"/>
        <result column="check_result" property="checkResult" jdbcType="INTEGER"/>
        <result column="check_opinion" property="checkOpinion" jdbcType="VARCHAR"/>
        <result column="checkout_time" property="checkoutTime" jdbcType="TIMESTAMP"/>
        <result column="task_end_time" property="taskEndTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="create_id" property="createId" jdbcType="VARCHAR"/>
        <result column="modify_id" property="modifyId" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ForRankingPASSED" type="com.ziroom.tech.demeterapi.dao.entity.ForRankingPASSED">
        <result column="receiver_uid" property="receiverUid" jdbcType="VARCHAR"/>
        <result column="sumall" property="sumAll" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ForRankingTASK" type="com.ziroom.tech.demeterapi.dao.entity.ForRankingTASK">
        <result column="task_id" property="taskId" jdbcType="BIGINT"/>
        <result column="sumall" property="sumAll" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ForRankingPARENT" type="com.ziroom.tech.demeterapi.dao.entity.ForRankingPARENT">
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
        <result column="sumall" property="sumAll" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, task_id, task_type, receiver_uid, task_status, reject_reason, check_result, check_opinion, checkout_time, task_end_time, create_time, modify_time, create_id, modify_id, parent_id
    </sql>
    <!--1、start已认证技能点-->
    <select id="getSkillPointPASSED" resultMap="ForRankingPASSED">
        select receiver_uid,  count(receiver_uid) as sumall from demeter_task_user WHERE
        check_result = 1
        <if test="taskIds != null">  <!--如果传了技能图谱-->
            AND task_id in <foreach collection="taskIds" item="idtask" index="index" open="(" close=")" separator=","> #{idtask,jdbcType=BIGINT} </foreach>
        </if>
        AND create_time between #{rankingReq.startTime, jdbcType=DATE} AND #{rankingReq.endTime, jdbcType=DATE}
        group by receiver_uid order by sumall desc, checkout_time
        limit 10;
    </select>
    <!--已认证end-->
    <!--start 当前登录用户排名-->

    <!--当前登录用户排名 end-->
    <!--2、start 认证技能数量 reciever_uid-->
    <select id="getSkillNumPASSED" resultMap="ForRankingPASSED">
        select receiver_uid, count(distinct parent_id) as sumall from demeter_task_user
        WHERE check_result = 1
        <if test="taskIds != null">  <!--如果传了技能图谱-->
            AND task_id in <foreach collection="taskIds" item="idtask" index="index" open="(" close=")" separator=","> #{idtask,jdbcType=BIGINT} </foreach>
        </if>
        AND create_time between #{rankingReq.startTime, jdbcType=DATE} AND #{rankingReq.endTime, jdbcType=DATE}
        group by receiver_uid order by sumall desc, create_time
        limit 10;
    </select>
    <!--认证技能数量 end-->
    <!--3、start热门技能点 task_id-->
    <select id="getHotSkillPointName" resultMap="ForRankingTASK">
        select task_id, count(task_id) as sumall from demeter_task_user
        WHERE 1=1
        <if test="taskIds != null">  <!--如果传了技能图谱-->
            AND task_id in <foreach collection="taskIds" item="idtask" index="index" open="(" close=")" separator=","> #{idtask,jdbcType=BIGINT} </foreach>
        </if>
        AND create_time between #{rankingReq.startTime, jdbcType=DATE} AND #{rankingReq.endTime, jdbcType=DATE}
        group by task_id order by sumall desc, checkout_time
        limit 10;
    </select>
    <!--热门技能点end-->
    <!--4、start热门技能   parent_id-->
    <select id="getHotSkill" resultMap="ForRankingPARENT" >
        select parent_id, count(parent_id) as sumall from demeter_task_user
        WHERE 1=1
        <if test="taskIds != null">  <!--如果传了技能图谱-->
            AND task_id in <foreach collection="taskIds" item="idtask" index="index" open="(" close=")" separator=","> #{idtask,jdbcType=BIGINT} </foreach>
        </if>
        AND create_time between #{rankingReq.startTime, jdbcType=DATE} AND #{rankingReq.endTime, jdbcType=DATE}
        group by parent_id order by sumall desc, create_time
        limit 10;
    </select>
    <!--热门技能end-->

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterTaskUserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        FROM demeter_task_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM demeter_task_user
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM demeter_task_user
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterTaskUser">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO demeter_task_user (task_id, task_type, receiver_uid, task_status, reject_reason, check_result, check_opinion,
        checkout_time, task_end_time, create_time, modify_time, create_id, modify_id
        )
        VALUES (#{taskId,jdbcType=BIGINT}, #{taskType,jdbcType=INTEGER}, #{receiverUid,jdbcType=VARCHAR}, #{taskStatus,jdbcType=INTEGER}, #{rejectReason,jdbcType=VARCHAR}, #{checkResult,jdbcType=INTEGER}, #{checkOpinion,jdbcType=VARCHAR},
        #{checkoutTime,jdbcType=TIMESTAMP}, #{taskEndTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR}, #{modifyId,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterTaskUser">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO demeter_task_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                task_id,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
            <if test="receiverUid != null">
                receiver_uid,
            </if>
            <if test="taskStatus != null">
                task_status,
            </if>
            <if test="rejectReason != null">
                reject_reason,
            </if>
            <if test="checkResult != null">
                check_result,
            </if>
            <if test="checkOpinion != null">
                check_opinion,
            </if>
            <if test="checkoutTime != null">
                checkout_time,
            </if>
            <if test="taskEndTime != null">
                task_end_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="modifyId != null">
                modify_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                #{taskId,jdbcType=BIGINT},
            </if>
            <if test="taskType != null">
                #{taskType,jdbcType=INTEGER},
            </if>
            <if test="receiverUid != null">
                #{receiverUid,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="rejectReason != null">
                #{rejectReason,jdbcType=VARCHAR},
            </if>
            <if test="checkResult != null">
                #{checkResult,jdbcType=INTEGER},
            </if>
            <if test="checkOpinion != null">
                #{checkOpinion,jdbcType=VARCHAR},
            </if>
            <if test="checkoutTime != null">
                #{checkoutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskEndTime != null">
                #{taskEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="modifyId != null">
                #{modifyId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterTaskUserExample" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM demeter_task_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        UPDATE demeter_task_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.taskId != null">
                task_id = #{record.taskId,jdbcType=BIGINT},
            </if>
            <if test="record.taskType != null">
                task_type = #{record.taskType,jdbcType=INTEGER},
            </if>
            <if test="record.receiverUid != null">
                receiver_uid = #{record.receiverUid,jdbcType=VARCHAR},
            </if>
            <if test="record.taskStatus != null">
                task_status = #{record.taskStatus,jdbcType=INTEGER},
            </if>
            <if test="record.rejectReason != null">
                reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
            </if>
            <if test="record.checkResult != null">
                check_result = #{record.checkResult,jdbcType=INTEGER},
            </if>
            <if test="record.checkOpinion != null">
                check_opinion = #{record.checkOpinion,jdbcType=VARCHAR},
            </if>
            <if test="record.checkoutTime != null">
                checkout_time = #{record.checkoutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.taskEndTime != null">
                task_end_time = #{record.taskEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyTime != null">
                modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createId != null">
                create_id = #{record.createId,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyId != null">
                modify_id = #{record.modifyId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        UPDATE demeter_task_user
        SET id = #{record.id,jdbcType=BIGINT},
        task_id = #{record.taskId,jdbcType=BIGINT},
        task_type = #{record.taskType,jdbcType=INTEGER},
        receiver_uid = #{record.receiverUid,jdbcType=VARCHAR},
        task_status = #{record.taskStatus,jdbcType=INTEGER},
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
        check_result = #{record.checkResult,jdbcType=INTEGER},
        check_opinion = #{record.checkOpinion,jdbcType=VARCHAR},
        checkout_time = #{record.checkoutTime,jdbcType=TIMESTAMP},
        task_end_time = #{record.taskEndTime,jdbcType=TIMESTAMP},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
        create_id = #{record.createId,jdbcType=VARCHAR},
        modify_id = #{record.modifyId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterTaskUser">
        UPDATE demeter_task_user
        <set>
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=BIGINT},
            </if>
            <if test="taskType != null">
                task_type = #{taskType,jdbcType=INTEGER},
            </if>
            <if test="receiverUid != null">
                receiver_uid = #{receiverUid,jdbcType=VARCHAR},
            </if>
            <if test="taskStatus != null">
                task_status = #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="rejectReason != null">
                reject_reason = #{rejectReason,jdbcType=VARCHAR},
            </if>
            <if test="checkResult != null">
                check_result = #{checkResult,jdbcType=INTEGER},
            </if>
            <if test="checkOpinion != null">
                check_opinion = #{checkOpinion,jdbcType=VARCHAR},
            </if>
            <if test="checkoutTime != null">
                checkout_time = #{checkoutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskEndTime != null">
                task_end_time = #{taskEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="modifyId != null">
                modify_id = #{modifyId,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ziroom.tech.demeterapi.dao.entity.DemeterTaskUser">
        UPDATE demeter_task_user
        SET task_id = #{taskId,jdbcType=BIGINT},
            task_type = #{taskType,jdbcType=INTEGER},
            receiver_uid = #{receiverUid,jdbcType=VARCHAR},
            task_status = #{taskStatus,jdbcType=INTEGER},
            reject_reason = #{rejectReason,jdbcType=VARCHAR},
            check_result = #{checkResult,jdbcType=INTEGER},
            check_opinion = #{checkOpinion,jdbcType=VARCHAR},
            checkout_time = #{checkoutTime,jdbcType=TIMESTAMP},
            task_end_time = #{taskEndTime,jdbcType=TIMESTAMP},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            create_id = #{createId,jdbcType=VARCHAR},
            modify_id = #{modifyId,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
</mapper>

